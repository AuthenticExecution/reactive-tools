# Generic Module rules

## required keys ##
type required:
  is_present(dict, "type")

name required:
  is_present(dict, "type")

node required:
  is_present(dict, "node")


## type of the required values ##
type must be a str:
  isinstance(dict["type"], str)

name must be a str:
  isinstance(dict["name"], str)

node must be a str:
  isinstance(dict["node"], str)

priority must be an int:
  not is_present(dict, "priority") or
  (is_present(dict, "priority") and isinstance(dict["priority"], int))

nonce must be an int:
  not is_present(dict, "nonce") or
  (is_present(dict, "nonce") and isinstance(dict["nonce"], int))

deployed must be a bool:
    not is_present(dict, "deployed") or
    (is_present(dict, "deployed") and isinstance(dict["deployed"], bool))

attested must be a bool:
    not is_present(dict, "attested") or
    (is_present(dict, "attested") and isinstance(dict["attested"], bool))

## Other constraints ##
