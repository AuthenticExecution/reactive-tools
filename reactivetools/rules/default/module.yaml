# Generic Module rules

## required keys ##
type required:
  is_present(dict_, "type")

name required:
  is_present(dict_, "type")

node required:
  is_present(dict_, "node")


## type of the required values ##
type must be a str:
  isinstance(dict_["type"], str)

name must be a str:
  isinstance(dict_["name"], str)

node must be a str:
  isinstance(dict_["node"], str)

priority must be an int:
  not is_present(dict_, "priority") or
  (is_present(dict_, "priority") and isinstance(dict_["priority"], int))

nonce must be an int:
  not is_present(dict_, "nonce") or
  (is_present(dict_, "nonce") and isinstance(dict_["nonce"], int))

deployed must be a bool:
    not is_present(dict_, "deployed") or
    (is_present(dict_, "deployed") and isinstance(dict_["deployed"], bool))

attested must be a bool:
    not is_present(dict_, "attested") or
    (is_present(dict_, "attested") and isinstance(dict_["attested"], bool))

## Other constraints ##
